---- local --> github ---> pipeline (ci/cd) ----> server  

1. staging ---> www.staging.domain.com
2. production ---> www.domain.com

Relationships

1. One to one
2. One to Many
3. Many to One
4. Many to Many

students (1 student have one address and one phone number)

Address, Phone 

students 

id, name, address, phone


========

One to One 

students (hasOne)

id , name 


student_informations  (belongsTo)

id, student_id, address, phone, voterid, aadh, etc..

====

One to Many 

students (hasMany)

id , name


student_informations (belongsTo)

id, student_id, address, phone, voterid, aadh, etc

====

Many to Many  

A product belongs to many categories (belongsToMany)

A category has many products (belongsToMany)

expl : Men , Women (Catgeory)

Tshirt, Shirt, Kurta (Product)

products  id, name

categories id , name

product_category (Pivot table)

id, product_id, category_id


Exercise : student_documents

name, file

2. Show those students who has their aadhar card
3. Show those students who has their aadhar card and phone no


git add .
git commit -m "second class"
git push origin master


has, whereHas, with

latest, oldest, pluck, limit, paginate, find, findOrFail, firstOrFail

attach, detach, sync

create, createMany, updateOrCreate, 

https://laravel.com/docs/8.x/eloquent#retrieving-or-creating-models
php artisan storage:link


public --> admin --> css , js , images etc
           design --> css , js , images etc

resources -> admin -> users -> index.blade, create.blade.php

1. Route Naming
2. Group Routes
3. Add middleware, prefix, namespace, alias (as)
4. match, any
5. query string, param, optional param